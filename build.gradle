plugins {
    id 'java'
    id("org.jetbrains.kotlin.jvm") version "1.7.10"
    id("org.jetbrains.intellij") version "1.5.2"
    id 'org.jetbrains.changelog' version "1.3.1"
}

group project.pluginGroup
version project.pluginVersion


sourceCompatibility = 11
targetCompatibility = 11

repositories {
    mavenCentral()
    google()
    maven { url "https://packages.atlassian.com/mvn/maven-atlassian-external/" }
    maven { url "https://maven.pkg.jetbrains.space/public/p/compose/dev" }
}

allprojects {
    repositories {
        mavenCentral()
        google()
        //解决构建时找不到jira库的问题
        maven { url "https://maven.pkg.jetbrains.space/public/p/compose/dev" }
        maven { url "https://packages.atlassian.com/mvn/maven-atlassian-external/" }
        maven {
            name = "gradle-releases"
            url = URI.create("https://repo.gradle.org/gradle/libs-releases")
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    api 'uk.com.robust-it:cloning:1.9.12'
    api 'org.apache.commons:commons-text:1.11.0'
    testImplementation 'junit:junit:4.13.2'
    implementation 'com.alibaba:fastjson:1.2.70'
}

// See https://github.com/JetBrains/gradle-intellij-plugin/
intellij {
    pluginName = project.pluginName
//    version = project.platformVersion
    type = project.platformType
    downloadSources = true
    updateSinceUntilBuild = false
    buildSearchableOptions.enabled = false
    //plugins=["com.intellij.zh:203.392"]
    //plugins=["com.intellij.ja:203.392"]
    plugins = ['android','java','gradle','Kotlin'] // Android Studio相关插件
    // 指定Android Studio的路径
    localPath = 'D:\\AndroidStudio\\'
    runIde {
        jvmArgs = project.runIdeJvmArgs.split(',').toList()
    }

    patchPluginXml {
        sinceBuild = project.pluginSinceBuild
        untilBuild = project.pluginUntilBuild
    }

}
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
compileJava {
    options.compilerArgs.add('--add-exports=java.desktop/sun.swing=ALL-UNNAMED')
}

compileTestJava {
    options.compilerArgs.add('--add-exports=java.desktop/sun.swing=ALL-UNNAMED')
}

tasks.withType(JavaExec) {
    jvmArgs += '--add-exports=java.desktop/sun.swing=ALL-UNNAMED'
}